#include<bits/stdc++.h>
using namespace std;
#define int              long long
#define all(xs)          xs.begin(), xs.end()
#define rall(xs)         xs.rbegin(), xs.rend()
#define sz(x)            (int)((x).size())
#define pb               push_back
#define ppb              pop_back
#define pf               push_front
#define ppf              pop_front
#define ff               first
#define ss               second
#define prec(n)          fixed<<setprecision(n)
#define debug(x)         cout << (#x) << " is " << (x) << "\n"
#define debug2(x, y)     cout << #x << "=" << x << "," << #y << "=" << y << "\n"
#define debug3(x, y,z)   cout << #x << "=" << x << "," << #y << "=" << y << "," << #z << "=" << z << "\n"
#define debug4(x, y,z,a) cout << #x << "=" << x << "," << #y << "=" << y << "," << #z << "=" << z <<" "<<#a << "=" << a << "\n"
#define yes              cout<<"YES";
#define no               cout<<"NO";
#define ll               cout<<"\n";
#define INF              2e18
int gcd(int A,int B){    return (B == 0) ? A : gcd(B, A % B);}
int lcm(int A,int B){    return A * B / gcd(A, B);}
const int N=2e6+10;
const int NN=1e9+10;
const int mod = 1e9 + 7;

// for mod inverse calculate bexp(num, mod-2, mod);
int bmul(int a, int b){
    int ans = 0;
    while(b>0){
        if(b & 1){
            ans = (ans + a)%mod;
        }
        a = (a + a) % mod;
        b >>= 1;
    }
    return ans;
}


int bexpo(int a, int b){
    int ans = 1;
    while(b){
        if(b & 1){
            ans = bmul(ans, a);
        }
        a = bmul(a, a);
        b >>= 1;
    }
    return ans;
}
// ==========================================================================
// =========================================================================
int hp[N+10];
int factormultiple[N+10];
void precompute(){
    for(int i=2; i<N; i++){
        if(hp[i] == 0){
            for(int j=i; j<N; j+=i){
                hp[j] = i;
            }
        }
    }
}

vector<int> distinctpf(int num){
    vector<int> ans;
    while(num > 1){
        int val = hp[num];
        while(num%val == 0){
            num /= val;
        }
        ans.pb(val);
    }
    return ans;
}
int hsh[N];
// ========================================================================
// ==========================================================================
bool check(vector<int>& a, int mid){
    vector<int> arr = a;
    int n = sz(arr);
    for(int i = n - 1; i >= 2; --i){
        if (arr[i] < mid){
            return false;
        }
        int extra = min(a[i], arr[i] - mid) / 3;
        arr[i - 1] += extra;
        arr[i - 2] += 2 * extra;
        arr[i] -= 3 * extra;
    }
    for(int i: arr){
        if (i < mid){
            return false;
        }
    }
    return true;
}

void solve(){
    int n; cin >> n;
    vector<int> arr(n);
    int mn = INT_MAX;
    int mx = INT_MIN;
    for(int &i: arr){
        cin >> i;
        mx = max(mx, i);
        mn = min(mn, i);
    }
    int low = mn;
    int high = mx;
    int ans = mn;
    int tt=20;
    while(low <= high){
        int mid = (low + high) / 2;
        bool can = check(arr, mid);
        if(can){
            ans = max(ans, mid);
            low = mid + 1;
        }
        else{
            high = mid - 1;
        }
        // debug2(low, high);
    }
    cout << ans; ll;
    return;
}

signed main(){
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false), cin.tie(NULL);
    int t=1;
    // memset(hp, 0, sizeof hp);
    // memset(hsh, 0, sizeof hp);
    // memset(factormultiple, 0, sizeof hp);
    // precompute();
    cin>>t;
    for(int i=0;i<t;i++){
        // cout<<"Case #"<<i+1<<": "; 
       solve();
    }
}
